{"ast":null,"code":"var _jsxFileName = \"/home/x3x0n/Documents/Marcha-LandingPage-main (2)/src/components/Home/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Countdown() {\n  _s();\n\n  let refInstance = useRef(null);\n  let [counter, setCountdown] = useState(\"00:00:00\");\n\n  let getCounter = e => {\n    let all = Date.parse(e) - Date.parse(new Date());\n    let s = Math.floor(all / 1000 % 60);\n    let m = Math.floor(all / 1000 / 60 % 60);\n    let h = Math.floor(all / 1000 / 60 / 60 % 24);\n    let d = Math.floor(all / 1000 / 60 / 60);\n    return {\n      all,\n      s,\n      m,\n      h\n    };\n  };\n\n  let initCounter = e => {\n    let {\n      all,\n      h,\n      m,\n      s\n    } = getCounter(e);\n\n    if (all >= 0) {\n      setCountdown((h > 9 ? h : \"0\" + h) + \":\" + (m > 9 ? m : \"0\" + m) + \":\" + (s > 9 ? s : \"0\" + s));\n    }\n  };\n\n  let reset = e => {\n    setCountdown(\"01:00:00:20\");\n    if (refInstance.current) clearInterval(refInstance.current);\n    let id = setInterval(() => {\n      initCounter(e);\n    }, 1000);\n    refInstance.current = id;\n  };\n\n  let voidTime = () => {\n    let voidZone = new Date();\n    voidZone.setSeconds(voidZone.getSeconds() + 20);\n    return voidZone;\n  };\n\n  useEffect(() => {\n    reset(voidTime());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-semibold justify-center\",\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"6prGdkhOsC/fHInqX2sgkRLeSAE=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/x3x0n/Documents/Marcha-LandingPage-main (2)/src/components/Home/Countdown.js"],"names":["React","useState","useEffect","useRef","Countdown","refInstance","counter","setCountdown","getCounter","e","all","Date","parse","s","Math","floor","m","h","d","initCounter","reset","current","clearInterval","id","setInterval","voidTime","voidZone","setSeconds","getSeconds"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,MAAIC,WAAW,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,MAAI,CAACG,OAAD,EAAUC,YAAV,IAA0BN,QAAQ,CAAC,UAAD,CAAtC;;AACA,MAAIO,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,IAAgBE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA1B;AACA,QAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAYL,GAAG,GAAG,IAAP,GAAe,EAA1B,CAAR;AACA,QAAIM,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAYL,GAAG,GAAG,IAAN,GAAa,EAAd,GAAoB,EAA/B,CAAR;AACA,QAAIO,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAYL,GAAG,GAAG,IAAN,GAAa,EAAb,GAAkB,EAAnB,GAAyB,EAApC,CAAR;AACA,QAAIQ,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAYL,GAAG,GAAG,IAAN,GAAa,EAAb,GAAkB,EAA9B,CAAR;AACA,WAAO;AACLA,MAAAA,GADK;AAELG,MAAAA,CAFK;AAGLG,MAAAA,CAHK;AAILC,MAAAA;AAJK,KAAP;AAMD,GAZD;;AAaA,MAAIE,WAAW,GAAIV,CAAD,IAAO;AACvB,QAAI;AAAEC,MAAAA,GAAF;AAAOO,MAAAA,CAAP;AAAUD,MAAAA,CAAV;AAAaH,MAAAA;AAAb,QAAmBL,UAAU,CAACC,CAAD,CAAjC;;AACA,QAAIC,GAAG,IAAI,CAAX,EAAc;AACZH,MAAAA,YAAY,CACV,CAACU,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,MAAMA,CAAnB,IACE,GADF,IAEGD,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,MAAMA,CAFrB,IAGE,GAHF,IAIGH,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,MAAMA,CAJrB,CADU,CAAZ;AAOD;AACF,GAXD;;AAYA,MAAIO,KAAK,GAAIX,CAAD,IAAO;AACjBF,IAAAA,YAAY,CAAC,aAAD,CAAZ;AACA,QAAIF,WAAW,CAACgB,OAAhB,EAAyBC,aAAa,CAACjB,WAAW,CAACgB,OAAb,CAAb;AACzB,QAAIE,EAAE,GAAGC,WAAW,CAAC,MAAM;AACzBL,MAAAA,WAAW,CAACV,CAAD,CAAX;AACD,KAFmB,EAEjB,IAFiB,CAApB;AAGAJ,IAAAA,WAAW,CAACgB,OAAZ,GAAsBE,EAAtB;AACD,GAPD;;AAQA,MAAIE,QAAQ,GAAG,MAAM;AACnB,QAAIC,QAAQ,GAAG,IAAIf,IAAJ,EAAf;AACAe,IAAAA,QAAQ,CAACC,UAAT,CAAoBD,QAAQ,CAACE,UAAT,KAAwB,EAA5C;AACA,WAAOF,QAAP;AACD,GAJD;;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAACK,QAAQ,EAAT,CAAL;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,uCAAd;AAAA,gBAAuDnB;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAOD;;GAnDQF,S;;KAAAA,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nfunction Countdown() {\n  let refInstance = useRef(null);\n  let [counter, setCountdown] = useState(\"00:00:00\");\n  let getCounter = (e) => {\n    let all = Date.parse(e) - Date.parse(new Date());\n    let s = Math.floor((all / 1000) % 60);\n    let m = Math.floor((all / 1000 / 60) % 60);\n    let h = Math.floor((all / 1000 / 60 / 60) % 24);\n    let d = Math.floor((all / 1000 / 60 / 60));\n    return {\n      all,\n      s,\n      m,\n      h,\n    };\n  };\n  let initCounter = (e) => {\n    let { all, h, m, s } = getCounter(e);\n    if (all >= 0) {\n      setCountdown(\n        (h > 9 ? h : \"0\" + h) +\n          \":\" +\n          (m > 9 ? m : \"0\" + m) +\n          \":\" +\n          (s > 9 ? s : \"0\" + s),\n      );\n    }\n  };\n  let reset = (e) => {\n    setCountdown(\"01:00:00:20\");\n    if (refInstance.current) clearInterval(refInstance.current);\n    let id = setInterval(() => {\n      initCounter(e);\n    }, 1000);\n    refInstance.current = id;\n  };\n  let voidTime = () => {\n    let voidZone = new Date();\n    voidZone.setSeconds(voidZone.getSeconds() + 20);\n    return voidZone;\n  };\n  useEffect(() => {\n    reset(voidTime());\n  }, []);\n  return (\n    <>\n      <h1 className=\"text-4xl font-semibold justify-center\">{counter}</h1>\n      <div className=\"d-grid\">\n      </div>\n    </>\n  );\n}\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}