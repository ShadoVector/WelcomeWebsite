{"ast":null,"code":"var _jsxFileName = \"/home/x3x0n/Documents/work/shadovector/moneysync/WelcomeWebsite/src/components/Home/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, reset } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Countdown() {\n  _s();\n\n  const refInstance = useRef(null);\n  const [counter, setCountdown] = useState(\"00:00:00:00\"); // Added days\n\n  const getCounter = e => {\n    let all = Date.parse(e) - Date.parse(new Date());\n    let s = Math.floor(all / 1000 % 60);\n    let m = Math.floor(all / 1000 / 60 % 60);\n    let h = Math.floor(all / 1000 / 60 / 60 % 24);\n    let d = Math.floor(all / 1000 / 60 / 60 / 24); // Calculate days\n\n    return {\n      all,\n      s,\n      m,\n      h,\n      d\n    };\n  };\n\n  const initCounter = e => {\n    let {\n      all,\n      d,\n      h,\n      m,\n      s\n    } = getCounter(e);\n\n    if (all >= 0) {\n      setCountdown((d > 9 ? d : \"0\" + d) + \":\" + (h > 9 ? h : \"0\" + h) + \":\" + (m > 9 ? m : \"0\" + m) + \":\" + (s > 9 ? s : \"0\" + s));\n    } else {\n      setCountdown(\"00:00:00:00\");\n      clearInterval(refInstance.current);\n    }\n  };\n\n  const reset = e => {\n    setCountdown(\"00:00:00:00\"); // Reset to include days\n\n    if (refInstance.current) clearInterval(refInstance.current);\n    let id = setInterval(() => {\n      initCounter(e);\n    }, 1000);\n    refInstance.current = id;\n  };\n\n  const voidTime = () => {\n    let voidZone = new Date();\n    voidZone.setMonth(6); // Corrected the setMonth method\n\n    voidZone.setHours(12, 0, 0, 0); // Set time to midnight\n\n    return voidZone;\n  };\n\n  useEffect(() => {\n    reset(voidTime());\n  }, [voidTime]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-semibold justify-center\",\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"HOQW/YJBPaN91MQF7hQi0B4BE4E=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/x3x0n/Documents/work/shadovector/moneysync/WelcomeWebsite/src/components/Home/Countdown.js"],"names":["React","useState","useEffect","useRef","reset","Countdown","refInstance","counter","setCountdown","getCounter","e","all","Date","parse","s","Math","floor","m","h","d","initCounter","clearInterval","current","id","setInterval","voidTime","voidZone","setMonth","setHours"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, reset} from \"react\";\n\nfunction Countdown() {\n  const refInstance = useRef(null);\n  const [counter, setCountdown] = useState(\"00:00:00:00\"); // Added days\n\n  const getCounter = (e) => {\n    let all = Date.parse(e) - Date.parse(new Date());\n    let s = Math.floor((all / 1000) % 60);\n    let m = Math.floor((all / 1000 / 60) % 60);\n    let h = Math.floor((all / 1000 / 60 / 60) % 24);\n    let d = Math.floor(all / 1000 / 60 / 60 / 24); // Calculate days\n    return {\n      all,\n      s,\n      m,\n      h,\n      d,\n    };\n  };\n\n  const initCounter = (e) => {\n    let { all, d, h, m, s } = getCounter(e);\n    if (all >= 0) {\n      setCountdown(\n        (d > 9 ? d : \"0\" + d) +\n          \":\" +\n          (h > 9 ? h : \"0\" + h) +\n          \":\" +\n          (m > 9 ? m : \"0\" + m) +\n          \":\" +\n          (s > 9 ? s : \"0\" + s)\n      );\n    } else {\n      setCountdown(\"00:00:00:00\");\n      clearInterval(refInstance.current);\n    }\n  };\n\n  const reset = (e) => {\n    setCountdown(\"00:00:00:00\"); // Reset to include days\n    if (refInstance.current) clearInterval(refInstance.current);\n    let id = setInterval(() => {\n      initCounter(e);\n    }, 1000);\n    refInstance.current = id;\n  };\n\n  const voidTime = () => {\n    let voidZone = new Date();\n    voidZone.setMonth(6); // Corrected the setMonth method\n    voidZone.setHours(12, 0, 0, 0); // Set time to midnight\n    return voidZone;\n  };\n\n  useEffect(() => {\n    reset(voidTime());\n  }, [voidTime]);\n\n  return (\n    <>\n      <h1 className=\"text-4xl font-semibold justify-center\">{counter}</h1>\n      <div className=\"d-grid\"></div>\n    </>\n  );\n}\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}